version: '3.7'

services:

  redis-master:
    image: redis:5-alpine
    command: redis-server --appendonly no
    deploy:
      placement:
        constraints:
          - node.labels.redis-role == master
    volumes:
      - redis-data:/data
    networks:
      - host
    extra_hosts:
      - "redis-master:${REDIS_MASTER_IP}"

  redis-sentinel:
    image: redis:5-alpine
    entrypoint: |
      sh -c 'sh -s <<EOF
      "/bin/sh" -c "cat <<EOF > /sentinel.conf
      port 3000
      dir /tmp
      sentinel monitor master-node redis-master 6379 2
      sentinel down-after-milliseconds master-node 5000
      sentinel parallel-syncs master-node 1
      sentinel failover-timeout master-node 5000
      EOF"
      "/bin/sh" -c "redis-sentinel /sentinel.conf"
      EOF'

    deploy:
      # every docker node run a redis-sentinel
      mode: global
    volumes:
      - redis-data:/data
    networks:
      - host
    extra_hosts:
      - "redis-master:${REDIS_MASTER_IP}"

  redis-slave:
    image: redis:5-alpine
    command: redis-server --appendonly yes --aof-use-rdb-preamble yes --slaveof redis-master 6379
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.redis-role != master
    volumes:
      - redis-data:/data
    networks:
      - host
    extra_hosts:
      - "redis-master:${REDIS_MASTER_IP}"

networks:
  host:
    external: true

volumes:
  redis-data:

